name: Release
on:
  workflow_dispatch:
    inputs:
      level:
        default: "minor"
        required: false
        type: choice
        options:
          - "major"
          - "minor"
          - "patch"
        description: "bump to [major|minor|patch]"
permissions:
  contents: write
  pull-requests: write
defaults:
  run:
    shell: bash
jobs:
  release:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Git config
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Bump version
        env:
          BUMP_LEVEL: ${{ inputs.level }}
        run: |
          git fetch --tag
          CURRENT_VERSION="$(git tag --sort=-v:refname | head -1)"
          if [[ "${CURRENT_VERSION}" == "" ]]; then
            CURRENT_VERSION="v0.0.0"
          fi
          IFS='.' read -ra arr_version <<<"${CURRENT_VERSION#v}"
          major="${arr_version[0]}"
          minor="${arr_version[1]}"
          patch="${arr_version[2]}"
          case "${BUMP_LEVEL}" in
            major)
              major="$((major + 1))"
              minor=0
              patch=0
              ;;
            minor)
              minor="$((minor + 1))"
              patch=0
              ;;
            patch)
              patch="$((patch + 1))"
              ;;
            *)
              printf "invalid argument: %s" "${BUMP_LEVEL}" >&2
              exit 1
              ;;
          esac
          echo "VERSION=v${major}.${minor}.${patch}" >> "${GITHUB_ENV}"

      - name: Push version tag
        run: |
          MAJOR_VERSION="${VERSION%%.*}"
          git tag --force --message "${VERSION}" "${VERSION}"
          git tag --force --message "${VERSION}" "${MAJOR_VERSION}"
          git push --force origin "${VERSION}"
          git push --force origin "${MAJOR_VERSION}"

      - name: Update CHANGELOG
        env:
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          OLD_BODY=''
          if [ -e "CHANGELOG.md" ]; then
            OLD_BODY="$(tail -n +3 CHANGELOG.md)"
          fi
          ENDPOINT="/repos/${GITHUB_REPOSITORY}/releases/generate-notes"
          RELEASE_NOTES="$(gh api "${ENDPOINT}" -f tag_name="${VERSION}" --jq .body)"
          NEW_BODY="$(tail -n +4 <<<"${RELEASE_NOTES}" | sed 's/## New Contributors/### New Contributors/')"
          echo -e "# Changelog\n## ${VERSION}\n${NEW_BODY}\n${OLD_BODY}" >CHANGELOG.md

      - name: Format markdown
        run: |
          npm install -g prettier@latest
          prettier --parser="markdown" --write CHANGELOG.md

      - name: Create pull request
        env:
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          BRANCH="release-${VERSION}"
          git switch -c "${BRANCH}"
          git add CHANGELOG.md
          git commit -m "Bump up to ${VERSION}"
          git push origin "${BRANCH}" --force
          gh pr create --base "${DEFAULT_BRANCH}" --head "${BRANCH}" \
            --title "Bump up to ${VERSION}" --body "Please merge me"
